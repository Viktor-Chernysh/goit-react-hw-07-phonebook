{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/contacts/contact-actions.js","components/Filter/Filter.js","redux/contacts/contactsSlice.js","components/Form/Form.js","components/Contacts/contactItem.js","redux/contacts/contacts-selectors.js","components/Contacts/Contacts.js","App.js","redux/contacts/counter-reducers.js","redux/store.js","index.js"],"names":["module","exports","Section","props","children","className","s","section","addFilter","createAction","connect","dispatch","onAddFilter","e","target","value","label","input","type","id","uuidv4","name","onChange","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","nameInputId","numberInputId","Form","useState","setName","number","setNumber","data","handleChange","trim","form","onSubmit","preventDefault","contactObject","addedName","map","el","toLowerCase","includes","addedNumber","alert","error","console","log","massage","htmlFor","pattern","title","required","button","ContactItem","isDeleting","isLoading","contact_item","disabled","onClick","getFilter","state","filter","override","css","isFetching","contact_list","loading","size","normalizeFilter","filteredContacts","contact","App","filterReducer","createReducer","actions","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,mBCA7GD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,aAAe,iC,mBCA/ED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,QAAU,2B,mKCIbC,MAJf,SAAiBC,GACf,IAAQC,EAAaD,EAAbC,SACR,OAAO,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,K,gCCIxBI,EAAYC,uBAAa,qBCetC,IAKeC,cAAQ,MALI,SAAAC,GACzB,MAAO,CACLC,YAAa,SAAAC,GAAC,OAAIF,EAASH,EAAUK,EAAEC,OAAOC,YAGnCL,EArBf,YAAkC,IAAhBE,EAAe,EAAfA,YAEhB,OACE,wBAAOP,UAAWC,IAAEU,MAApB,UACE,uDACA,uBACEX,UAAWC,IAAEW,MACbC,KAAK,OACLC,GAAIC,cACJC,KAAK,SACLC,SAAUV,U,wCCdLW,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,SAAU,CAAC,YACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,8BACPC,aAAc,CAAC,cAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAd,GAAE,MAAK,CACZkB,IAAI,aAAD,OAAelB,GAClBmB,OAAQ,WAEVC,gBAAiB,CAAC,cAEpBC,cAAeT,EAAQK,SAAS,CAC9BH,MAAO,SAAAQ,GAAU,MAAK,CACpBJ,IAAK,YACLC,OAAQ,OACRI,KAAMD,IAERF,gBAAiB,CAAC,kBAMtBI,EAGEpB,EAHFoB,sBACAC,EAEErB,EAFFqB,yBACAC,EACEtB,EADFsB,yBCzBIC,EAAc1B,cACd2B,EAAgB3B,cA0FP4B,MAxFf,WACE,MAAwBC,mBAAS,IAAjC,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAwBP,IAAjBL,EAAP,oBACQa,EAASV,IAATU,KA4BR,SAASC,EAAazC,GACpB,MAAwBA,EAAEC,OAAlBO,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MACd,OAAQM,GACN,IAAK,OACH6B,EAAQnC,EAAMwC,QACd,MACF,IAAK,SACHH,EAAUrC,EAAMwC,QAChB,MACF,QACE,QASN,OACE,uBAAMlD,UAAWC,IAAEkD,KAAMC,SA9CN,SAAA5C,GACnBA,EAAE6C,iBACF,IAAMC,EAAgB,CACpBtC,OACA8B,UAEIS,EAAYP,EACfQ,KAAI,SAAAC,GAAE,OAAIA,EAAGzC,KAAK0C,iBAClBC,SAASL,EAActC,KAAK0C,eACzBE,EAAcZ,EACjBQ,KAAI,SAAAC,GAAE,OAAIA,EAAGX,UACba,SAASL,EAAcR,QAC1B,GAAIS,GAAaK,EACfC,MAAM,GAAD,OAAIP,EAActC,KAAlB,iCADP,CAKA,IACEmB,EAAcmB,GACd,MAAOQ,GACPC,QAAQC,IAAIF,EAAMG,SAqBpBpB,EAAQ,IACRE,EAAU,MAIV,UACE,wBAAO/C,UAAWC,IAAEU,MAAOuD,QAASzB,EAApC,iBAEE,uBACEzC,UAAWC,IAAEW,MACbE,GAAI2B,EACJ/B,MAAOM,EACPH,KAAK,OACLG,KAAK,OACLmD,QAAQ,yHACRC,MAAM,kcACNnD,SAAUgC,EACVoB,UAAQ,OAGZ,wBAAOrE,UAAWC,IAAEU,MAAOuD,QAASxB,EAApC,mBAEE,uBACE1C,UAAWC,IAAEW,MACbE,GAAI4B,EACJhC,MAAOoC,EACPjC,KAAK,MACLG,KAAK,SACLmD,QAAQ,yFACRC,MAAM,giBACNnD,SAAUgC,EACVoB,UAAQ,OAGZ,wBAAQrE,UAAWC,IAAEqE,OAAQzD,KAAK,SAAlC,6B,0DC1FS,SAAS0D,EAAT,GAA4C,IAArBzD,EAAoB,EAApBA,GAAIE,EAAgB,EAAhBA,KAAM8B,EAAU,EAAVA,OAC9C,EAAmDP,IAAnD,mBAAOT,EAAP,KAAmC0C,EAAnC,KAAwBC,UAExB,OACE,qBAAIzE,UAAWC,IAAEyE,aAAjB,UACG1D,EADH,IACS,+BAAO8B,IACd,wBACEjC,KAAK,SACL8D,SAAUH,EACVI,QAAS,kBAAM9C,EAAchB,IAH/B,SAKG0D,EAAa,cAAgB,cCdtC,I,EACeK,EADG,SAAAC,GAAK,OAAIA,EAAMC,QCU3BC,EAAWC,cAAH,uGAyBd,IAMe5E,eANS,SAAAyE,GACtB,MAAO,CACLC,OAAQF,EAAUC,MAIkB,KAAzBzE,EAzBf,YAA+B,IAAD,EAAV0E,EAAU,EAAVA,OAClB,EAA6BzC,IAArBU,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,WAQd,OACE,qBAAIlF,UAAWC,IAAEkF,aAAjB,UACE,cAAC,IAAD,CAAYC,QAASF,EAAYG,KAAM,GAAIJ,IAAKD,IADlD,UARuB,WACvB,IAAMM,EAAkBP,EAAOrB,cAC/B,MAAe,KAAXqB,EACK/B,EAEFA,EAAK+B,QAAO,SAAAtB,GAAE,OAAIA,EAAGzC,KAAK0C,cAAcC,SAAS2B,MAKrDC,UAFH,aAEG,EAAoB/B,KAAI,SAAAgC,GAAO,OAC9B,cAACjB,EAAD,eAAkCiB,GAAhBA,EAAQ1E,aCDnB2E,I,EAAAA,EAtBf,WACE,OACE,qCACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,OAGF,eAAC,EAAD,WACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,eCbKC,EAAgBC,wBAAc,GAAD,eACvCC,GAAoB,SAACC,EAAD,YAAMC,Y,QCAhBC,EAAQC,yBAAe,CAClCC,SAAO,mBAEJ/E,EAAYE,YAAcF,EAAY+E,SAFlC,uBAGGP,GAHH,GAKPQ,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9BjF,EAAYgF,gBAIhBE,yBAAeL,EAAMzF,UCRrB+F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.fc630516.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2YCy9\",\"label\":\"Form_label__hph9e\",\"input\":\"Form_input__2WEUK\",\"button\":\"Form_button__3dw_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__2yEAi\",\"contact_item\":\"Contacts_contact_item__Pp3kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MdkV\",\"input\":\"Filter_input__2TgN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3VQeP\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <div className={s.section}>{children}</div>;\r\n}\r\nexport default Section;\r\n","// import * as counterTypes from './counter-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addNewContact = createAction('contact/addContact');\r\n\r\n// export const deleteContact = createAction('contact/deleteContact');\r\n\r\nexport const addFilter = createAction('contact/getFilter');\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Filter.module.css';\r\nimport { addFilter } from '../../redux/contacts/contact-actions';\r\n\r\nfunction Filter({ onAddFilter }) {\r\n  // const inputId = uuidv4();\r\n  return (\r\n    <label className={s.label}>\r\n      <div>Find contact by name</div>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        id={uuidv4()}\r\n        name=\"filter\"\r\n        onChange={onAddFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddFilter: e => dispatch(addFilter(e.target.value)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6195129874c1bd00176c6b49.mockapi.io/api/v1/',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './Form.module.css';\r\nimport {\r\n  useCreateContactMutation,\r\n  useFetchContactsQuery,\r\n} from '../../redux/contacts/contactsSlice';\r\n\r\nconst nameInputId = uuidv4();\r\nconst numberInputId = uuidv4();\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [createContact] = useCreateContactMutation();\r\n  const { data } = useFetchContactsQuery();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      name,\r\n      number,\r\n    };\r\n    const addedName = data\r\n      .map(el => el.name.toLowerCase())\r\n      .includes(contactObject.name.toLowerCase());\r\n    const addedNumber = data\r\n      .map(el => el.number)\r\n      .includes(contactObject.number);\r\n    if (addedName && addedNumber) {\r\n      alert(`${contactObject.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      createContact(contactObject);\r\n    } catch (error) {\r\n      console.log(error.massage);\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        break;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          id={nameInputId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          id={numberInputId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function ContactItem({ id, name, number }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={s.contact_item}>\r\n      {name}:<span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        disabled={isDeleting}\r\n        onClick={() => deleteContact(id)}\r\n      >\r\n        {isDeleting ? 'Deleting...' : 'Delete'}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","const getFilter = state => state.filter;\r\nexport default getFilter;\r\n","// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport MoonLoader from 'react-spinners/ClipLoader';\r\nimport { css } from '@emotion/react';\r\n\r\nimport ContactItem from './contactItem';\r\nimport s from './Contacts.module.css';\r\nimport { useFetchContactsQuery } from '../../redux/contacts/contactsSlice';\r\nimport getFilter from '../../redux/contacts/contacts-selectors';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: rgb(187, 187, 187);\r\n`;\r\n\r\nfunction Contacts({ filter }) {\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const filteredContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    if (filter === '') {\r\n      return data;\r\n    }\r\n    return data.filter(el => el.name.toLowerCase().includes(normalizeFilter));\r\n  };\r\n  return (\r\n    <ul className={s.contact_list}>\r\n      <MoonLoader loading={isFetching} size={60} css={override} />\r\n      {filteredContacts()?.map(contact => (\r\n        <ContactItem key={contact.id} {...contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Contacts);\r\n","import './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n      </Section>\r\n      {/* {contacts.length > 0 && ( */}\r\n      <Section>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <Contacts />\r\n      </Section>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: state.contacts.items,\r\n// });\r\n// export default connect(mapStateToProps, null)(App);\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as actions from './contact-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [actions.addFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { filterReducer } from './contacts/counter-reducers';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\nimport { contactsApi } from './contacts/contactsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // contacts: contactReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}