{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/contacts/contact-actions.js","components/Filter/Filter.js","redux/contacts/contactsSlice.js","components/Form/Form.js","components/Contacts/contactItem.js","components/Contacts/Contacts.js","App.js","redux/contacts/counter-reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","props","children","className","s","section","addNewContact","createAction","deleteContact","addFilter","connect","dispatch","onAddFilter","e","target","value","label","input","type","id","uuidv4","name","onChange","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","mutation","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","nameInputId","numberInputId","Form","useState","setName","number","setNumber","data","handleChange","trim","form","onSubmit","preventDefault","contactObject","addedName","map","el","toLowerCase","includes","addedNumber","alert","error","console","log","massage","htmlFor","pattern","title","required","button","ContactItem","isDeleting","isLoading","contact_item","onClick","filteredContacts","filter","allContacts","normalizeFilter","state","contacts","items","onDelete","isFetching","contact_list","contact","length","itemsReducer","createReducer","actions","action","addedContact","payload","addContact","filterReducer","_","contactReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25b65a96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Contacts_contact_list__2yEAi\",\"contact_item\":\"Contacts_contact_item__Pp3kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MdkV\",\"input\":\"Filter_input__2TgN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3VQeP\"};","import s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { children } = props;\r\n  return <div className={s.section}>{children}</div>;\r\n}\r\nexport default Section;\r\n","// import * as counterTypes from './counter-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addNewContact = createAction('contact/addContact');\r\n// export const addNewContact = contact => ({\r\n//   type: counterTypes.GET_CONTACT,\r\n//   payload: contact,\r\n// });\r\nexport const deleteContact = createAction('contact/deleteContact');\r\n// export const deleteContact = id => ({\r\n//   type: counterTypes.DELETE_CONTACT,\r\n//   payload: id,\r\n// });\r\nexport const addFilter = createAction('contact/getFilter');\r\n// export const addFilter = value => ({\r\n//   type: counterTypes.GET_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Filter.module.css';\r\nimport { addFilter } from '../../redux/contacts/contact-actions';\r\n\r\nfunction Filter({ onAddFilter }) {\r\n  // const inputId = uuidv4();\r\n  return (\r\n    <label className={s.label}>\r\n      <div>Find contact by name</div>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        id={uuidv4()}\r\n        name=\"filter\"\r\n        onChange={onAddFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddFilter: e => dispatch(addFilter(e.target.value)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6195129874c1bd00176c6b49.mockapi.io/api/v1/',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './Form.module.css';\r\nimport * as actions from '../../redux/contacts/contact-actions';\r\nimport {\r\n  useCreateContactMutation,\r\n  useFetchContactsQuery,\r\n} from '../../redux/contacts/contactsSlice';\r\n\r\nconst nameInputId = uuidv4();\r\nconst numberInputId = uuidv4();\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [createContact] = useCreateContactMutation();\r\n  const { data } = useFetchContactsQuery();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contactObject = {\r\n      name,\r\n      number,\r\n    };\r\n    const addedName = data\r\n      .map(el => el.name.toLowerCase())\r\n      .includes(contactObject.name.toLowerCase());\r\n    const addedNumber = data\r\n      .map(el => el.number)\r\n      .includes(contactObject.number);\r\n    if (addedName && addedNumber) {\r\n      alert(`${contactObject.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      createContact(contactObject);\r\n    } catch (error) {\r\n      console.log(error.massage);\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        break;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          id={nameInputId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          id={numberInputId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n// Form.propTypes = {\r\n//   onAddContact: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onAddContact: value => dispatch(actions.addNewContact(value)),\r\n//   };\r\n// };\r\n\r\nexport default Form;\r\n","import { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function ContactItem({ id, name, number }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n  return (\r\n    <li className={s.contact_item}>\r\n      {name}:<span>{number}</span>\r\n      <button type=\"button\" onClick={() => deleteContact(id)}>\r\n        {isDeleting ? 'Deleting...' : 'Delete'}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactItem from './contactItem';\r\nimport s from './Contacts.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contact-actions';\r\nimport { useFetchContactsQuery } from '../../redux/contacts/contactsSlice';\r\n\r\nfunction Contacts() {\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n\r\n  return (\r\n    <ol className={s.contact_list}>\r\n      {data?.map(contact => (\r\n        <ContactItem key={contact.id} {...contact} />\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n// Contacts.propTypes = {\r\n//   contacts: PropTypes.array,\r\n//   deleteContact: PropTypes.func,\r\n// };\r\nconst filteredContacts = (filter, allContacts) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  if (filter === '') {\r\n    return allContacts;\r\n  }\r\n  return allContacts.filter(el =>\r\n    el.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: filteredContacts(state.contacts.filter, state.contacts.items),\r\n    // filter: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import './App.css';\r\nimport Section from './components/Section/Section';\r\nimport Filter from './components/Filter/Filter';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts/Contacts';\r\n// import useLocalStorage from './hooks/useLocaleStorage';\r\nimport { connect } from 'react-redux';\r\n// import store from './redux/store';\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n      </Section>\r\n      {contacts.length > 0 && (\r\n        <Section>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <Contacts />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\n// import * as counterTypes from './counter-types';\r\nimport * as actions from './contact-actions';\r\n\r\nconst initContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n// const lSContacts = JSON.parse(\r\n//   JSON.parse(window.localStorage.getItem('persist:contacts')).items,\r\n// );\r\n\r\nconst addContact = (contacts, addedContact) => {\r\n  // contacts = lSContacts.length === 0 && initContacts;\r\n  const addedName = contacts\r\n    .map(el => el.name.toLowerCase())\r\n    .includes(addedContact.payload.name.toLowerCase());\r\n  const addedNumber = contacts\r\n    .map(el => el.number)\r\n    .includes(addedContact.payload.number);\r\n  if (addedName && addedNumber) {\r\n    alert(`${addedContact.payload.name} is already in contacts!`);\r\n    return contacts;\r\n  }\r\n  return [...contacts, addedContact.payload];\r\n};\r\n\r\nconst itemsReducer = createReducer(initContacts, {\r\n  [actions.addNewContact]: (state, action) => addContact(state, action),\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n// const itemsReducer = (state = initContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case counterTypes.GET_CONTACT:\r\n//       const addedName = state\r\n//         .map(el => el.name.toLowerCase())\r\n//         .includes(payload.name.toLowerCase());\r\n//       const addedNumber = state.map(el => el.number).includes(payload.number);\r\n//       if (addedName && addedNumber) {\r\n//         alert(`${payload.name} is already in contacts!`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case counterTypes.DELETE_CONTACT:\r\n//       return state.filter(el => el.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filterReducer = createReducer('', {\r\n  [actions.addFilter]: (_, { payload }) => payload,\r\n});\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case counterTypes.GET_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport const contactReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import {\r\n  configureStore,\r\n  // combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport { contactReducer } from './contacts/counter-reducers';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\nimport { contactsApi } from './contacts/contactsSlice';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactReducer,\r\n// });\r\n\r\n// const persistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, contactReducer),\r\n// });\r\n\r\n// const myMiddleware = store => next => action => {\r\n//   if (\r\n//     action.type === 'persist/REHYDRATE' &&\r\n//     action.payload?.items?.length === 0\r\n//   ) {\r\n//     action.payload.items.push(...store.getState().contacts.items);\r\n//   }\r\n\r\n//   next(action);\r\n// };\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   // myMiddleware,\r\n// ];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2YCy9\",\"label\":\"Form_label__hph9e\",\"input\":\"Form_input__2WEUK\",\"button\":\"Form_button__3dw_9\"};"],"sourceRoot":""}